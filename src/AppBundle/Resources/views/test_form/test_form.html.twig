{# controller: /src/AppBundle/Controller/TestFormController.php #}
<!DOCTYPE html>
<html lang="it">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Symfony + Bootstrap 4 Form Test</title>
  {# <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css"> #}
  <link rel="stylesheet" href="{{ asset('/public/prism/prism.css') }}" type="text/css" media="all">
  <link rel="stylesheet" href="{{ asset('/public/forms/test_page_assets/sf_test_form.css') }}" type="text/css" media="all">

</head>
<body>
  <main class="container-fluid my-4">
    <h1 id="top">Symfony + Bootstrap 4 Form Test</h1>
    <p class="font-italic mb-2">Rendering test of form elements (Massimo Cassandro 2016/2019 - v. 1.0).</p>

    <p>Symfony controller:
    <code>/src/AppBundle/Controller/TestFormController.php</code><br>
    This page twig template: <code>src/AppBundle/Resources/views/test_form/test_form.html.twig</code><br>
    Form template: <code>src/AppBundle/Resources/views/form/bs4_form_layout.html.twig</code><br>
    Scss file: <code>src/AppBundle/Resources/public/forms/_forms.scss</code>
    </p>
    <p class="font-italic">Note: for better clarity, in this test page, twig parameters
    (as required or disabled) have been added to the twig widget,
    even if they are tipically defined in the controller.</p>

    <div id="toc"></div>

    {{ form_start(form, {attr: {id: 'form1'}}) }}
    {{ form_errors(form) }}

      <h2>Basic elements</h2>

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'form_widget',
          info: 'Widget basic element (input text)',
          is_widget: true,
          varname: 'text1'
        } %}

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Hidden field',
          info: 'Note: only the field is returned, even if <code>form_row</code> is used',
          is_widget: false,
          varname: 'hidden1'
        } %}

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'form_row required + help text',
          info: 'input text',
          varname: 'text2',
          args: {
            help: 'Help text',
            label: 'form label',
            required: true,
            attr: {placeholder: 'Placeholder text'}
          }
        } %}

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'form_row required + disabled + help text',
          info: 'input text',
          varname: 'text3',
          args: {
            help: 'Help text',
            label: 'form label',
            disabled: true,
            required: true,
            attr: {placeholder: 'Placeholder text'}
          }
        } %}

      <h2>Single checkboxes</h2>

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Checkbox (input element only)',
          is_widget: true,
          varname: 'cbox1'
        } %}

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Checkbox Bootstrap default (stacked) + <code>form-group</code> container (default) + required',
          info: 'With custom id and custom label',
          varname: 'cbox2',
          args: {
            id: 'custom-id',
            help: 'Help text',
            label: 'Checkbox label',
            required: true
          }
        } %}

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Checkbox Bootstrap default (stacked) without container + required + disabled',
          varname: 'cbox3',
          args: {
            help: 'Help text',
            required : true,
            disabled: true,
            params: {
              container: false
            }
          }
        } %}
        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Checkbox Bootstrap default (stacked) + container + required + disabled',
          varname: 'cbox5',
          args: {
            help: 'Help text',
            required: true,
            disabled: true
          }
        } %}

        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Checkbox with label on top',
          info: "Place the label above the checkbox field. This option requires the cointainer markup,
            therefore the <code>container: false</code> option is ignored. Furhermore,
            the <code>top_label</code> option can't be activated if the <code>bs_custom_control</code>
            is set to true",
          varname: 'cbox7',
          args: {
            required: true,
            help: 'Help text',
            params: {
              container: false,
              top_label: true
           }
          }
        } %}


        <h2>Single checkboxes with custom controls</h2>
        <p>Note that checkboxes with custom controls are not fully supported with this template.<br>
          Bootsrap docs: <a href="https://getbootstrap.com/docs/4.3/components/forms/#checkboxes-and-radios-1">https://getbootstrap.com/docs/4.3/components/forms/#checkboxes-and-radios-1</a></p>
        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Checkbox stacked + custom control + required',
          info: "Note that the <code>help</code> and <code>params.container</code> don't take effect,
            and that the required asterisk is located after the label string
            through the <code>span.required</code> element",
          varname: 'cbox4',
          args: {
            help: 'Help text',
            required: true,
            params: {
              container: true,
              bs_custom_control: true
            }
          }
        } %}


        {% include 'test_form/test_form.incl.html.twig' with {
          title: 'Checkbox stacked + custom control + required + disabled',
          varname: 'cbox6',
          args: {
            required: true,
            disabled: true,
            params: {
              bs_custom_control: true
            }
          }
        } %}

      <h2 id="multiple_checkboxes">Multiple checkboxes</h2>
      <p>Checkbox series obtained thru the <code>ChoiceType</code> type
        (<a href="https://symfony.com/doc/current/reference/forms/types/choice.html">https://symfony.com/doc/current/reference/forms/types/choice.html</a>)</p>

      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'Multiple stacked checkboxes',
        info: "Controller <code>ChoiceType</code> options: <code>'expanded' =&gt; true, 'multiple' =&gt; true</code>.<br>" ~
          "Note that the <code>required</code> has the unique effect to add the required class to the fieldset,
          to highlight that at least one of the controls must be selected.
          However, the final check must be performed using javascript",
        varname: 'multiCbox1',
        args: {
          label: 'Multiple checkboxes',
          required: true
        }
      } %}

      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'Multiple stacked checkboxes + disabled',
        info: "Same of previous with disabled parameter",
        varname: 'multiCbox2',
        args: {
          label: 'Multiple checkboxes',
          required: true,
          disabled: true
        }
      } %}

      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'Multiple stacked checkboxes without fieldset',
        info: "For cases where checkboxes must be inserted in a fieldset already present in the markup",
        varname: 'multiCbox3',
        args: {
          label: 'Multiple checkboxes',
          params: {
            compound_container: false
          }
        }
      } %}

      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'Multiple stacked checkboxes without fieldset + required + disabled ',
        info: "Same of previous with disabled and required parameter.
        Note that the <code>required</code> parameter takes no effect.",
        varname: 'multiCbox4',
        args: {
          label: 'Multiple checkboxes',
          disabled:true,
          required: true,
          params: {
            compound_container: false
          }
        }
      } %}

      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'Multiple stacked checkboxes + multiple columns',
        id: 'multiple_cboxes_multi_columns',
        info: "Distributes checkboxes into responsive columns.
          The <code>column</code> parameter is an array whose keys are the bootstrap breakpoints
          abbreviations (sm, md, ...) and values are the number of desidered columns (max 5)",
        varname: 'multiCbox5',
        args: {
          label: 'Multiple checkboxes',
          params: {
            columns: {sm:1, md:2}
          }
        }
      } %}

      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'Multiple stacked checkboxes + custom control',
        info: "Note that multiple checkboxes with custom controls don't fully support
          all the parameters like disabled, required etc...",
        varname: 'multiCbox6',
        args: {
          label: 'Multiple checkboxes',
          params: {
            bs_custom_control: true
          }
        }
      } %}

      <h2>Radios</h2>

      <h2 id="multiselect">Multiselect</h2>
      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'MultiSelect',
        varname: 'multiSelect1',
        args: {
          label: 'Multiselect',
        }
      } %}

      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'MultiSelect',
        varname: 'multiSelect2',
        args: {
          label: 'Multiselect',
        }
      } %}

      <h2>Select</h2>

{#



    <div class="row">
    {*
      <div class="col-sm-6 col-md-3">
        {{ form_row(form.textField, {
          id: 'my_id',
          label: 'Campo text',
          attr: {}
        }) }}
      </div>
    *}
      <div class="col-sm-6 col-md-3">
        <div class="form-group">
          {{ form_label(form.textField2,
            'Campo con form_label separato',
            {id: 'custom_id'}
          ) }}
          {{ form_widget(form.textField2, {
            id: 'custom_id',
            attr: {}
          }) }}
        </div>
      </div>

    </div>

    <div class="row">
      <div class="col-sm-6 col-md-4 col-lg-3">
        {{ form_row(form.campo_select, {
          id: 'campo_select',
          label: 'Campo select',
          attr: {},
          help: 'help text'
        }) }}
      </div>
      <div class="col-sm-6 col-md-4 col-lg-3">

      </div>
    </div>

    // TODO trasformare in widget
    <div class="row">
      <div class="col-sm-6 col-md-4 col-lg-3">
        <div class="form-group">
          <label for="select_optgroup">Select con option group</label>
          <select class="form-control custom-select"  id="select_optgroup">
            <option value="">&mdash;</option>
            <option value="1">Option semplice</option>

            <optgroup label="Option group 1">
              <option value="2">Option in option group 1</option>
              <option value="3">Option in option group 2</option>
            </optgroup>

            <optgroup label="Option group con annidamento">
              <optgroup label="Option group annidato">
                <option value="4">Option in option group annidato 1</option>
                <option value="5">Option in option group annidato 2</option>
              </optgroup>
            </optgroup>

          </select>
        </div>
      </div>

    </div>

#}

      <h2>Other elements</h2>
      {% include 'test_form/test_form.incl.html.twig' with {
        title: 'Textarea',
        varname: 'textarea1',
        args: {
          help: 'Help text',
          label: 'form label',
          attr: {placeholder: 'Placeholder text'}
        }
      } %}

    {{ form_end(form) }}

  </main>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.10.2/beautify-html.js"></script>
  <script src="{{ asset('/public/prism/prism-min.js') }}"></script>
  <script src="{{ asset('/public/forms/test_page_assets/sf_test_form-min.js') }}"></script>
</body>
</html>

