{#
  Bootstrap 4 Symfony form layout
  =======================================
  Massimo Cassandro - 2019
#}

{#

TODO:
custom validity
checkbox singoli label sopra
serie checkbox e radio
liste tipo multiselect
range
file
Switches
input groups
progress?
buttons?
validazione?
#}

{#
  estende il template form base:
  `/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form/form_div_layout.html.twig`
#}
{% use "form_div_layout.html.twig" %}

{# base #}
{% block form_widget_simple -%}
  {% if type is not defined or type != 'hidden' %}
    {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-control' ~ (type|default('') == 'file' ? '-file' : ''))|trim}) -%}
  {% endif %}
  {%- if type is defined and (type == 'range' or type == 'color') %}
    {# Attribute "required" is not supported #}
    {%- set required = false -%}
  {% endif %}
  {{- parent() -}}
{%- endblock form_widget_simple %}

{%- block widget_attributes -%}
  {%- if not valid %}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) %}
  {% endif -%}
  {{ parent() }}
{%- endblock widget_attributes -%}


{% block form_label -%}
  {% if label is not same as(false) -%}
    {%- if compound is defined and compound -%}
      {%- set element = 'legend' -%}
      {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label')|trim}) -%}
    {%- else -%}
      {%- set label_attr = label_attr|merge({for: id}) -%}
    {%- endif -%}
    {% if required -%}
      {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}
    {%- endif -%}
    {% if label is empty -%}
      {%- if label_format is not empty -%}
        {% set label = label_format|replace({
          '%name%': name,
          '%id%': id,
        }) %}
      {%- else -%}
        {% set label = name|humanize %}
      {%- endif -%}
    {%- endif -%}
    <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
      {{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}{% block form_label_errors %}{{- form_errors(form) -}}{% endblock form_label_errors %}
    </{{ element|default('label') }}>
  {%- else -%}
    {%- if errors|length > 0 -%}
    <div id="{{ id }}_errors" class="mb-2">
      {{- form_errors(form) -}}
    </div>
    {%- endif -%}
  {%- endif -%}
{%- endblock form_label %}

{# Rows #}
{% block form_container_start -%}
  <{{ element|default('div') }} class="form-group {%- if disabled is defined and disabled %} disabled{%- endif -%}">
{%- endblock form_container_start %}

{% block form_container_end -%}
  {%- if help is defined and help|trim -%}
    <div class="form-help-text">{{ help|raw }}</div>
  {%- endif -%}
  </{{ element|default('div') }}>
{%- endblock form_container_end %}

{% block form_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
    {{ block('form_container_start') }}
    {{- form_label(form) -}}
    {{- form_widget(form) -}}
    {{ block('form_container_end') }}

{%- endblock form_row %}

{# checkboxes #}
{% block checkbox_widget -%}
  {{ parent() }}
{%- endblock checkbox_widget %}

{% block checkbox_row -%}
  {% set params = {
    container: true,
    bs_custom_control: false
  }|merge(params|default({})) %}

      {%- set parent_label_class = parent_label_class|default(label_attr.class|default('')) -%}


  {%- if params.bs_custom_control -%}
    {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-control-input')|trim}) -%}
    <div class="custom-control custom-checkbox{{ 'checkbox-inline' in parent_label_class ? ' custom-control-inline' }}">
      {{- block('checkbox_widget') -}}
      {{- form_label(form, null, {label_attr: {class:'custom-control-label' ~ (disabled|default()? ' disabled' :'') }}) -}}
      {% if required %}
        <span class="required"></span>
      {% endif %}
    </div>
  {%- else -%}
    {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-check-input')|trim}) -%}
    {% if params.container %}
      {{ block('form_container_start') }}
    {% endif %}
    <div class="form-check{{ 'checkbox-inline' in parent_label_class ? ' form-check-inline' }}">
      {{- block('checkbox_widget') -}}
      {{- form_label(form) -}}
    </div>
    {% if params.container %}
      {{ block('form_container_end') }}
    {% endif %}
  {%- endif -%}
{%- endblock checkbox_row %}


{# textarea #}
{% block textarea_widget -%}
  {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
  {{- parent() -}}
{%- endblock textarea_widget %}
