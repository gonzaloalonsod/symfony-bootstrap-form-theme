{"version":3,"sources":["sf_test_form.js"],"names":["test_elements","document","querySelectorAll","forEach","el","result","querySelector","innerHTML","trim","twig_el","twig_args","dataset","args","isWidget","Boolean","replace","text","characters","&","\"","'","<",">","m","escapeHTML","html_beautify","indent_inner_html","indent_size","indent_char","wrap_line_length","brace_style","preserve_newlines","max_preserve_newlines","indent_handlebars","extra_liners","JSON","stringify","parse","Prism","highlightAll","toTocElements","toc","item","idx","this_id","toc_str","innerText","id","tagName","length","getElementById"],"mappings":"yBAYA,MAGE,MAAMA,EAAgBC,SAASC,iBAAiB,sBAehDF,EAAcG,QAASC,IACrB,IAAIC,EAASD,EAAGE,cAAc,iBAAiBC,UAAUC,OACvDC,EAAUL,EAAGE,cAAc,SAC3BI,EAAYD,EAAQE,QAAQC,KAAKJ,OACjCK,EAAWC,QAAQL,EAAQE,QAAQE,UAarCR,EAASA,EAAOU,QAAQ,UAAW,KAChCA,QAAQ,KAAM,OACdA,QAAQ,KAAM,OACdA,QAAQ,UAAW,MAEtBX,EAAGE,cAAc,WAAWC,UAAY,sCApC7B,SAASS,GAClB,IAAIC,EAAa,CACfC,IAAK,QACLC,IAAK,SACLC,IAAM,SACNC,IAAK,OACLC,IAAK,QAGP,OAAQN,EAAO,IAAID,QAAQ,YAAY,SAASQ,GAC9C,OAAON,EAAWM,MA2BpBC,CAAWC,cAAcpB,EAlBT,CACdqB,mBAAqB,EACrBC,YAAe,EACfC,YAAe,IACfC,iBAAoB,GACpBC,YAAe,SACfC,mBAAqB,EACrBC,sBAAyB,EACzBC,mBAAqB,EACrBC,aAAgB,CAAC,YAWrB,gBAEGxB,IACDA,EAAYyB,KAAKC,UAAUD,KAAKE,MAAM3B,GAAY,KAAM,GACrDK,QAAQ,OAAQ,OAGrBN,EAAQF,UAAY,wCACTM,EAAU,cAAgB,YACnC,cAAgBH,EAAW,KAAOA,EAAY,IAAM,sBAKxD4B,MAAMC,cAAa,GAEnB,MAAMC,EAAgBvC,SAASC,iBAAiB,6BAEhD,IAAIuC,EAAK,GAETD,EAAcrC,QAAS,CAACuC,EAAKC,KAC3B,IAAIC,EAAU,OAAOD,IACnBE,EAAU,aAAaD,MAAYF,EAAKI,gBAE1CJ,EAAKK,GAAKH,EAEU,OAAjBF,EAAKM,SACHL,EAAM,IACPF,GAAO,cAETA,GAAO,OAASI,EAAU,QAG1BJ,GAAO,OAASI,EAAU,QAIzBF,IAAQH,EAAcS,OAAQ,IAC/BR,GAAO,gBAIXxC,SAASiD,eAAe,OAAO3C,UAAY,OAAOkC,UArFpD","sourcesContent":["/*\nUtilizzato per la rappresenrazione nella pagina di test.\nQuesto file non va incluso nei progetto in cui Ã¨ utilizzato il template form\n\n\nutilizza:\nhttps://github.com/beautify-web/js-beautify\nhttps://prismjs.com/\n*/\n\n\n/* globals Prism, html_beautify */\n(() => {\n  'use strict';\n\n  const test_elements = document.querySelectorAll('.form-test-element'),\n    escapeHTML=function(text) {\n      var characters = {\n        '&': '&amp;',\n        '\"': '&quot;',\n        '\\'': '&#039;',\n        '<': '&lt;',\n        '>': '&gt;'\n      };\n\n      return (text + '').replace(/[<>&\"']/g, function(m){\n        return characters[m];\n      });\n    };\n\n  test_elements.forEach( el => {\n    let result = el.querySelector('.result > div').innerHTML.trim(),\n      twig_el = el.querySelector('.twig'),\n      twig_args = twig_el.dataset.args.trim(),\n      isWidget = Boolean(twig_el.dataset.isWidget),\n      beautify_opts = {\n        'indent_inner_html': true,\n        'indent_size': 2,\n        'indent_char': ' ',\n        'wrap_line_length': 40,\n        'brace_style': 'expand',\n        'preserve_newlines': true,\n        'max_preserve_newlines': 5,\n        'indent_handlebars': false,\n        'extra_liners': ['/html']\n      };\n\n    result = result.replace(/\\s{2,}/g, ' ')\n      .replace(/>/g, '>\\n')\n      .replace(/</g, '\\n<')\n      .replace(/\\n{2,}/g, '\\n');\n\n    el.querySelector('.markup').innerHTML = '<pre><code class=\"language-markup\">' +\n      escapeHTML(html_beautify(result, beautify_opts)) +\n    //.replace(/\\r\\n|\\n\\r|\\r|\\n/g, '<br>\\n') +\n    '</code></pre>';\n\n    if(twig_args) {\n      twig_args = JSON.stringify(JSON.parse(twig_args), null, 2)\n        .replace('/[]/', '{}'); // JSON.stringify trasforma {} in []\n    }\n\n    twig_el.innerHTML = '<pre><code class=\"language-twig\">'+\n      '{{ ' + (isWidget? 'form_widget' : 'form_row') +\n      '(form.xxxx' + (twig_args? ', ' + twig_args : '') + ') }}' +\n      '</code></pre>';\n  });\n\n\n  Prism.highlightAll(true);\n\n  const toTocElements = document.querySelectorAll('h2, .form-test-element h3');\n\n  let toc ='';\n\n  toTocElements.forEach( (item,idx) => {\n    let this_id = `toc-${idx}`,\n      toc_str = `<a href=\"#${this_id}\">${item.innerText}</a>`;\n\n    item.id = this_id;\n\n    if(item.tagName === 'H2') {\n      if(idx > 0 ) {\n        toc += '</ul></li>';\n      }\n      toc += '<li>' + toc_str + '<ul>';\n\n    } else {\n      toc += '<li>' + toc_str + '</li>';\n    }\n\n\n    if(idx === toTocElements.length -1) {\n      toc += '</ul></li>';\n    }\n  });\n\n  document.getElementById('toc').innerHTML = `<ul>${toc}</ul>`;\n\n})();\n"]}